// form styling
$field-back: $color-menu;
$field-hint: $color-logo;
$field-help: #900;

form {
  @include reset;
}

.validator {
  display: none;

  &.active {
    display: block;
  }
}

.formgrid {
  display: grid;
  grid-template-columns: 1fr 1em 3fr;
  grid-gap: 3px 0.5rem;
  align-items: center;
  grid-auto-flow: dense;

  p {
    grid-column: 1 / 4;
    clear: both;
    font-weight: 600;
    user-select: none;
  }
}

input, output, textarea, select, button {
  grid-column: 2 / 4;
  clear: both;
  float: right;
  width: 70%;
  font-family: $font-main;
  font-size: 1rem;
  padding: 0.2rem 0.4rem;
  margin: 0 0 3px 0;
  background-color: $field-back;
  border: 1px solid $field-back;
	border-radius: 0;
  outline: 0 none;
  box-shadow: none;

  &:focus {
    border-color: $field-hint;
  }

  &:focus + label {
    color: $field-hint;
  }
}

select {
  padding-left: 0.2rem;
  outline: 0 none;
  cursor: pointer;
}

textarea {
  height: auto;

  & + label {
    align-self: start;
  }
}

label {
  grid-column: 1 / 2;
  float: left;
  font-size: 1rem;
  text-align: right;
  padding: 0.25rem 0;
  user-select: none;
  cursor: pointer;
}

input[type="date"], input[type="number"] {
  max-width: 9em;
}

input[type="checkbox"], input[type="radio"] {

  grid-column: 1 / 3;
  align-self: start;
  justify-self: end;
  width: auto;
  float: left;
  padding: 0;
  margin: 0.4em 0.5em 0 30%;

  & + label {
    position: relative;
    grid-column: 3 / 4;
    text-align: left;
    padding: 0;

    &::before, &::after {
      content: '';
      position: absolute;
      display: block;
      left: -1.5em;
    }

    &::before {
      width: 1em;
      height: 1em;
      top: 0.2em;
      background-color: $color-back;
      border: 0.15em solid $color-menu;
    }

    &::after {
      width: 1.1em;
      height: 0.5em;
      top: 0.3em;
      border: 0.25em solid $color-logo;
      border-style: none none solid solid;
      box-shadow: -2px 2px 0 $color-back;
      transform: rotate(-45deg) scale(0);
      transition: transform 0.1s cubic-bezier(0.2, 0.1, 1, 2);
    }

  }

  &:checked + label {
    font-weight: 600;

    &::after {
      transform: rotate(-45deg) scale(1);
    }
  }

}

// grid layout
@supports (display: grid) {

  input, output, textarea, select, button {
    width: 100%;
    margin: 0;
  }

  input[type="checkbox"], input[type="radio"] {
    margin: 0.4em 0 0 0;
  }

}

button {
  width: 10em;
  font-weight: 600;
  line-height: 1.6;
  padding: 0.2rem 0 0.4rem;
  margin-top: 1rem;
  color: $color-back;
  background-color: $color-fore;
  border: 0 none;
  cursor: pointer;

  &:hover, &:focus {
    color: #fff;
    background-color: $field-hint;
  }

  &::-moz-focus-inner {
    border:0;
  }

}

// submit status
.submit {
  display: inline-block;
  margin: 0 auto;
  color: $field-hint;

  &:before {
    display: inline-block;
    content: ' ';
    width: 1.4em;
    height: 1.4em;
    vertical-align: middle;
    margin-right: 0.3em;
    border: 3px dashed $field-hint;
    border-radius: 50%;
    animation: spinner 2s linear infinite;
  }
}

// submitting actions
button[type='submit'] {
  display: block;
}

.submit {
  display: none;
}

form.submitting {

  button[type='submit'] {
    display: none;
  }

  .submit {
    display: inline-block;
  }

}

// error
p.error {
  display: none;
  text-align: center;
  color: $field-help;
}

form.error {

  p.error {
    display: block;
  }

  input, output, textarea, select {

    &:invalid, &:invalid + label {
      color: $field-help;
    }

  }

}

// successful post
p.posted {
  display: none;
  font-size: 1.2rem;
  text-align: center;
  font-style: italic;
}

form.success {

  div, p {
    display: none;
  }

  p.posted {
    display: block;
  }

}


// animation
@keyframes spinner {
  0% { transform: scale(1) rotate(0deg); filter: opacity(1); }
  50% { transform: scale(0.6) rotate(180deg); filter: opacity(0.5); }
	100% { transform: scale(1) rotate(720deg); filter: opacity(1); }
}
